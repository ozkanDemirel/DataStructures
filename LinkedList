#include <stdio.h>
#include <stdlib.h>

struct node{
	int data;
	struct node *next;
};
struct node *addfront(struct node *head,int key){
	struct node *temp = (struct node*)malloc(sizeof(struct node));
	temp->data=key;
	temp->next=head;
	head=temp;
	return head;	

};
struct node *addlast(struct node *head,int key){
	struct node *temp = (struct node*)malloc(sizeof(struct node));
	temp->data=key;
	temp->next=NULL;
	if(head==NULL){
		head=temp;
	}
	else{
		struct node *tail=head;
		while(tail->next!=NULL){
			tail=tail->next;
		}
		tail->next=temp;
		
	}
	
	return head;	

};

void printList(struct node *head){
	if(head==NULL){
		printf("This list is empty!");
	}
	else{
		while(head!=NULL){
			printf("%d\n",head->data);
			head=head->next;
		}
	}
}

void printReverse(struct node *head){
	if(head == NULL)
		return;
	printReverse(head->next);
	printf("%d\n",head->data);
}

int countListItem(struct node *head){
	if(head==NULL){
	
		return 0;
	}
	else{
		return 1+countListItem(head->next);
	}
}

struct node *deleteNode(struct node *head, int key){
	if(head!=NULL){
		struct node *temp = head;
		if(head->data==key){
			head=head->next;
			free(temp);
		}
		else{
			while(temp->next!=NULL&&temp->next->data!=key){
				temp=temp->next;
			}
			if(temp->next==NULL){
				return head;
			}
			struct node *deleted=temp->next;
			temp->next=deleted->next;
			free(deleted);
		}
	}
	else{
		printf("This list is empty");
	}
	return head;
}

struct node *destroy(struct node *head){
	struct node *temp=head;
	/*while(temp!=NULL){
		head=head->next;
		free(temp);
		temp=head;
		}
		return NULL;*/
	
	if(temp==NULL){
		return NULL;
	}	
	else{
		head=head->next;
		free(temp);
		temp=head;
		return destroy(head);
	}
}



int main(int argc, char *argv[]) {
	struct node *head=NULL;
	head=addfront(head,8);
	head=addfront(head,2);
	head=addfront(head,3);
	head=addfront(head,6);
	printf("******************\n");
	printList(head);
	head=addlast(head,9);
	printf("******************\n");
	printReverse(head);
	printf("******************\n");
	int x=countListItem(head);
	printf("%d\n",x);
	printf("******************\n");
	head=deleteNode(head,3);
	printList(head);
	printf("******************\n");
	head=destroy(head);
	printList(head);
	return 0;
}
