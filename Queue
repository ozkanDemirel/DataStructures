#include <stdio.h>
#include <stdlib.h>

#define QUEUE_SIZE 10

struct node {
	int data;
	struct node *next;
};

typedef struct{
	int count;
	struct node *front;
	struct node *rear;
}queue;

void init(queue *q){
	q->count=0;
	q->front=q->rear=NULL;
}

int isFull(queue *q){
	if(q->count==QUEUE_SIZE)
		return 1;
	else{
		return 0;
	}
}

int isEmpty(queue *q){
	if(q->count==0){
		return 1;
	}
	else{
		return 0;
	}
}

void enqueue(queue *q, int key){
	if(isFull(&q)){
		printf("Queue is full");
	}
	else{
		struct node *new = (struct node*)malloc(sizeof(struct node));
		new->data=key;
		new->next=NULL;
		if(isEmpty(&q)){
			q->front=q->rear=new;
		}
		else{
			q->rear->next=new;
			q->rear=new;
		}
		q->count++;
	}
}

int dequeue(queue *q,int key){
	if(isEmpty(&q)){
		printf("Queue is empty");
	}
	else{
		int x = q->front->data;
		struct node *temp=q->front;
		q->front=q->front->next;
		free(temp);
		q->count--;
		if(isEmpty(&q))
			q->rear=NULL;
		return x;
	}
		
	
}

int main(int argc, char *argv[]) {
	
	return 0;
}
